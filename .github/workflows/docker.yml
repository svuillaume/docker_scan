name: Lacework Container Image & IaC Scan

on:
  push:
    branches: ["main"]
    paths:
      - 'Dockerfile'
  pull_request:
    branches: ["main"]
    paths:
      - 'Dockerfile'
  workflow_dispatch:

env:
  IMAGE_NAME: myapp
  IMAGE_TAG: v1.0.0
  FULL_IMAGE_NAME: myapp:v1.0.0

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t ${{ env.FULL_IMAGE_NAME }} .

      - name: Set up environment file for Lacework
        run: |
          env | grep "GITHUB_\|LW_\|CI_" > env.list
          echo "LW_ACCOUNT=${{ secrets.LW_ACCOUNT }}" >> env.list
          echo "LW_API_KEY=${{ secrets.LW_API_KEY }}" >> env.list
          echo "LW_API_SECRET=${{ secrets.LW_API_SECRET }}" >> env.list
          echo "EXIT_FLAG=CRITICAL=1" >> env.list

      - name: Lacework IaC Policy Scan
        run: |
          docker run --env-file env.list -v "$(pwd):/app/src" lacework/codesec:stable lacework iac scan --directory=.

      - name: Run vulnerability scan with Lacework inline scanner
        env:
          LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }}
          LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -e LW_ACCOUNT_NAME=$LW_ACCOUNT_NAME \
            -e LW_ACCESS_TOKEN=$LW_ACCESS_TOKEN \
            -e LW_SCANNER_SAVE_RESULTS=$LW_SCANNER_SAVE_RESULTS \
            -e DEBUG=$DEBUG \
            lacework/lacework-inline-scanner:latest \
            image evaluate ${{ env.IMAGE_NAME }} ${{ env.IMAGE_TAG }} --save
