name: Build, Scan, and Push to ECR

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  IMAGE_NAME: foobar
  IMAGE_TAG: v1.0
  LOCAL_IMAGE: foobar:v1.0
  FULL_IMAGE_NAME: ${{ secrets.ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

jobs:
  build-scan-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t ${{ env.LOCAL_IMAGE }} .

      - name: Run vulnerability scan with Lacework inline scanner
        env:
          LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }}
          LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -e LW_ACCOUNT_NAME=$LW_ACCOUNT_NAME \
            -e LW_ACCESS_TOKEN=$LW_ACCESS_TOKEN \
            lacework/lacework-inline-scanner:latest \
            image evaluate ${{ env.LOCAL_IMAGE }} --save

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

      - name: Tag image for ECR
        run: |
          docker tag ${{ env.LOCAL_IMAGE }} 

      - name: Push image to ECR
        run: |
          docker push ${{ env.FULL_IMAGE_NAME }}
